// Generated by CoffeeScript 1.8.0
(function() {
  describe('Collection Functions', function() {
    var hm;
    hm = window.hm;
    it('proxy: define a custom context', function() {
      var customContext, method;
      customContext = (function() {
        function customContext() {}

        return customContext;

      })();
      method = hm.proxy(customContext, function() {
        return this;
      });
      return expect(method()).toBe(customContext, 'Expected method to return instance of customContext');
    });
    it('watchMethod: does not modify non-function', function() {
      var test;
      test = {
        method: 42
      };
      hm.watchMethod(test, 'method', function() {});
      return expect(test.method).toBe(42);
    });
    return it('watchMethod: intercepts object method', function() {
      var callbackCalled, methodCalled, test;
      callbackCalled = false;
      methodCalled = false;
      test = {
        method: function() {
          return methodCalled = true;
        }
      };
      hm.watchMethod(test, 'method', function() {
        return callbackCalled = true;
      });
      test.method();
      expect(callbackCalled).toBe(true, 'Expected watchMethod callback to be called');
      return expect(methodCalled).toBe(true, 'Expected method to be called');
    });
  });

}).call(this);

//# sourceMappingURL=HelperSpec.js.map
